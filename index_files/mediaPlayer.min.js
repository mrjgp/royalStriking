"use strict";define("mediaPlayer",["lodash","react","core","compDesignUtils","santaProps","mediaCommon"],function(e,t,i,s,n,o){function r(e,i){return t.Children.map(e.children,function(s){return t.cloneElement(s,{playerInteraction:a(e),playerInHoverState:i.hover,playerInTimedHoverState:i.timedHover,playerId:e.id})})}function a(e){return e.isMobileDevice||e.isMobileView?"useNative":e.compProp.playerInteraction}var p=o.mediaLogicMixins.mediaPlayer,l=i.compMixins.timeoutsMixin;return{displayName:"MediaPlayer",mixins:[i.compMixins.skinBasedComp,p,l],propTypes:e.defaults({style:n.Types.Component.style.isRequired,compDesign:n.Types.Component.compDesign,compProp:n.Types.Component.compProp,isExperimentOpen:n.Types.isExperimentOpen,isMobileDevice:n.Types.Device.isMobileDevice,isMobileView:n.Types.isMobileView}),statics:{useSantaTypes:!0,behaviors:o.mediaBehaviors.mediaPlayer},getInitialState:function(){return{hover:!1,timedHover:!1}},toggleHover:function(e){var t="mouseenter"===e.type;this.setState({hover:t}),t||this.removeTimedHover()},setTimedHover:function(){this.state.timedHover||this.setState({timedHover:!0}),this.setTimeout(this.removeTimedHover,2e3)},removeTimedHover:function(){this.setState({timedHover:!1})},handleHoverAction:function(e){switch(this.toggleHover(e),e.type){case"mouseenter":"playOnHover"===this.props.playerInteraction?this.playMedia():"pauseOnHover"===this.props.playerInteraction&&this.pauseMedia();break;case"mouseleave":"playOnHover"===this.props.playerInteraction?this.pauseMedia():"pauseOnHover"===this.props.playerInteraction&&this.playMedia()}},getInteractionEvents:function(){var e={onMouseEnter:this.handleHoverAction,onMouseLeave:this.handleHoverAction,onMouseMove:this.setTimedHover};return"click"!==a(this.props)&&"useNative"!==a(this.props)||(e.onClick=this.togglePlayMedia),e},getSkinProperties:function(){var i=this.props.isExperimentOpen("sv_cssDesignData"),n=a(this.props);return{"":{style:this.props.style},background:this.createFillLayers({playerInteraction:n}),container:e.assign({className:this.classSet({"interactive-player":"none"!==n}),style:s.getContainerStyle(this.props.compDesign,i)},this.getInteractionEvents()),inlineContentParent:{style:{pointerEvents:0===t.Children.count(this.props.children)||"useNative"===n?"none":"auto"}},inlineContent:{children:r(this.props,this.state)}}}}});
//# sourceMappingURL=mediaPlayer.min.js.map